// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/formancehq/formance-sdk-go/v3/pkg/models/shared"
	"github.com/formancehq/formance-sdk-go/v3/pkg/utils"
	"net/http"
)

type GetTransactionsRequest struct {
	// Parameter used in pagination requests.
	// Set to the value of next for the next page of results.
	// Set to the value of previous for the previous page of results.
	// No other parameters can be set when the cursor is set.
	//
	Cursor *string `queryParam:"style=form,explode=true,name=cursor"`
	// The maximum number of results to return per page
	PageSize *int64 `default:"15" queryParam:"style=form,explode=true,name=pageSize"`
	// A wallet ID to filter on
	WalletID *string `queryParam:"style=form,explode=true,name=walletID"`
}

func (g GetTransactionsRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetTransactionsRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (g *GetTransactionsRequest) GetCursor() *string {
	if g == nil {
		return nil
	}
	return g.Cursor
}

func (g *GetTransactionsRequest) GetPageSize() *int64 {
	if g == nil {
		return nil
	}
	return g.PageSize
}

func (g *GetTransactionsRequest) GetWalletID() *string {
	if g == nil {
		return nil
	}
	return g.WalletID
}

type GetTransactionsResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// OK
	GetTransactionsResponse *shared.GetTransactionsResponse
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (g *GetTransactionsResponse) GetContentType() string {
	if g == nil {
		return ""
	}
	return g.ContentType
}

func (g *GetTransactionsResponse) GetGetTransactionsResponse() *shared.GetTransactionsResponse {
	if g == nil {
		return nil
	}
	return g.GetTransactionsResponse
}

func (g *GetTransactionsResponse) GetStatusCode() int {
	if g == nil {
		return 0
	}
	return g.StatusCode
}

func (g *GetTransactionsResponse) GetRawResponse() *http.Response {
	if g == nil {
		return nil
	}
	return g.RawResponse
}
