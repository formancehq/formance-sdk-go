// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"net/http"
)

type V2AddMetadataToAccountRequest struct {
	// Use an idempotency key
	IdempotencyKey *string `header:"style=simple,explode=false,name=Idempotency-Key"`
	// metadata
	RequestBody map[string]string `request:"mediaType=application/json"`
	// Exact address of the account. It must match the following regular expressions pattern:
	// ```
	// ^\w+(:\w+)*$
	// ```
	//
	Address string `pathParam:"style=simple,explode=false,name=address"`
	// Set the dry run mode. Dry run mode doesn't add the logs to the database or publish a message to the message broker.
	DryRun *bool `queryParam:"style=form,explode=true,name=dryRun"`
	// Name of the ledger.
	Ledger string `pathParam:"style=simple,explode=false,name=ledger"`
}

func (v *V2AddMetadataToAccountRequest) GetIdempotencyKey() *string {
	if v == nil {
		return nil
	}
	return v.IdempotencyKey
}

func (v *V2AddMetadataToAccountRequest) GetRequestBody() map[string]string {
	if v == nil {
		return map[string]string{}
	}
	return v.RequestBody
}

func (v *V2AddMetadataToAccountRequest) GetAddress() string {
	if v == nil {
		return ""
	}
	return v.Address
}

func (v *V2AddMetadataToAccountRequest) GetDryRun() *bool {
	if v == nil {
		return nil
	}
	return v.DryRun
}

func (v *V2AddMetadataToAccountRequest) GetLedger() string {
	if v == nil {
		return ""
	}
	return v.Ledger
}

type V2AddMetadataToAccountResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (v *V2AddMetadataToAccountResponse) GetContentType() string {
	if v == nil {
		return ""
	}
	return v.ContentType
}

func (v *V2AddMetadataToAccountResponse) GetStatusCode() int {
	if v == nil {
		return 0
	}
	return v.StatusCode
}

func (v *V2AddMetadataToAccountResponse) GetRawResponse() *http.Response {
	if v == nil {
		return nil
	}
	return v.RawResponse
}
