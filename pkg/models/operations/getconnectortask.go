// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/formancehq/formance-sdk-go/v3/pkg/models/shared"
	"net/http"
)

type GetConnectorTaskRequest struct {
	// The name of the connector.
	Connector shared.Connector `pathParam:"style=simple,explode=false,name=connector"`
	// The task ID.
	TaskID string `pathParam:"style=simple,explode=false,name=taskId"`
}

func (g *GetConnectorTaskRequest) GetConnector() shared.Connector {
	if g == nil {
		return shared.Connector("")
	}
	return g.Connector
}

func (g *GetConnectorTaskRequest) GetTaskID() string {
	if g == nil {
		return ""
	}
	return g.TaskID
}

type GetConnectorTaskResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// OK
	TaskResponse *shared.TaskResponse
}

func (g *GetConnectorTaskResponse) GetContentType() string {
	if g == nil {
		return ""
	}
	return g.ContentType
}

func (g *GetConnectorTaskResponse) GetStatusCode() int {
	if g == nil {
		return 0
	}
	return g.StatusCode
}

func (g *GetConnectorTaskResponse) GetRawResponse() *http.Response {
	if g == nil {
		return nil
	}
	return g.RawResponse
}

func (g *GetConnectorTaskResponse) GetTaskResponse() *shared.TaskResponse {
	if g == nil {
		return nil
	}
	return g.TaskResponse
}
