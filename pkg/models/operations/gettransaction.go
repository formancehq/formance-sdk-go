// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/formancehq/formance-sdk-go/v3/pkg/models/shared"
	"github.com/formancehq/formance-sdk-go/v3/pkg/utils"
	"math/big"
	"net/http"
)

type GetTransactionRequest struct {
	// Name of the ledger.
	Ledger string `pathParam:"style=simple,explode=false,name=ledger"`
	// Transaction ID.
	Txid *big.Int `pathParam:"style=simple,explode=false,name=txid"`
}

func (g GetTransactionRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetTransactionRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"ledger", "txid"}); err != nil {
		return err
	}
	return nil
}

func (g *GetTransactionRequest) GetLedger() string {
	if g == nil {
		return ""
	}
	return g.Ledger
}

func (g *GetTransactionRequest) GetTxid() *big.Int {
	if g == nil {
		return big.NewInt(0)
	}
	return g.Txid
}

type GetTransactionResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// OK
	TransactionResponse *shared.TransactionResponse
}

func (g *GetTransactionResponse) GetContentType() string {
	if g == nil {
		return ""
	}
	return g.ContentType
}

func (g *GetTransactionResponse) GetStatusCode() int {
	if g == nil {
		return 0
	}
	return g.StatusCode
}

func (g *GetTransactionResponse) GetRawResponse() *http.Response {
	if g == nil {
		return nil
	}
	return g.RawResponse
}

func (g *GetTransactionResponse) GetTransactionResponse() *shared.TransactionResponse {
	if g == nil {
		return nil
	}
	return g.TransactionResponse
}
