// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/formancehq/formance-sdk-go/v3/pkg/models/shared"
	"net/http"
)

type UpdateConnectorConfigV1Request struct {
	ConnectorConfig shared.ConnectorConfig `request:"mediaType=application/json"`
	// The name of the connector.
	Connector shared.Connector `pathParam:"style=simple,explode=false,name=connector"`
	// The connector ID.
	ConnectorID string `pathParam:"style=simple,explode=false,name=connectorId"`
}

func (o *UpdateConnectorConfigV1Request) GetConnectorConfig() shared.ConnectorConfig {
	if o == nil {
		return shared.ConnectorConfig{}
	}
	return o.ConnectorConfig
}

func (o *UpdateConnectorConfigV1Request) GetConnectorConfigAdyen() *shared.AdyenConfig {
	return o.GetConnectorConfig().AdyenConfig
}

func (o *UpdateConnectorConfigV1Request) GetConnectorConfigAtlar() *shared.AtlarConfig {
	return o.GetConnectorConfig().AtlarConfig
}

func (o *UpdateConnectorConfigV1Request) GetConnectorConfigBankingcircle() *shared.BankingCircleConfig {
	return o.GetConnectorConfig().BankingCircleConfig
}

func (o *UpdateConnectorConfigV1Request) GetConnectorConfigCurrencycloud() *shared.CurrencyCloudConfig {
	return o.GetConnectorConfig().CurrencyCloudConfig
}

func (o *UpdateConnectorConfigV1Request) GetConnectorConfigDummypay() *shared.DummyPayConfig {
	return o.GetConnectorConfig().DummyPayConfig
}

func (o *UpdateConnectorConfigV1Request) GetConnectorConfigGeneric() *shared.GenericConfig {
	return o.GetConnectorConfig().GenericConfig
}

func (o *UpdateConnectorConfigV1Request) GetConnectorConfigMangopay() *shared.MangoPayConfig {
	return o.GetConnectorConfig().MangoPayConfig
}

func (o *UpdateConnectorConfigV1Request) GetConnectorConfigModulr() *shared.ModulrConfig {
	return o.GetConnectorConfig().ModulrConfig
}

func (o *UpdateConnectorConfigV1Request) GetConnectorConfigMoneycorp() *shared.MoneycorpConfig {
	return o.GetConnectorConfig().MoneycorpConfig
}

func (o *UpdateConnectorConfigV1Request) GetConnectorConfigStripe() *shared.StripeConfig {
	return o.GetConnectorConfig().StripeConfig
}

func (o *UpdateConnectorConfigV1Request) GetConnectorConfigWise() *shared.WiseConfig {
	return o.GetConnectorConfig().WiseConfig
}

func (o *UpdateConnectorConfigV1Request) GetConnector() shared.Connector {
	if o == nil {
		return shared.Connector("")
	}
	return o.Connector
}

func (o *UpdateConnectorConfigV1Request) GetConnectorID() string {
	if o == nil {
		return ""
	}
	return o.ConnectorID
}

type UpdateConnectorConfigV1Response struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *UpdateConnectorConfigV1Response) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *UpdateConnectorConfigV1Response) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *UpdateConnectorConfigV1Response) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
