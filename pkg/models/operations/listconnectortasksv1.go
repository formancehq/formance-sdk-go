// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/formancehq/formance-sdk-go/v3/pkg/models/shared"
	"github.com/formancehq/formance-sdk-go/v3/pkg/utils"
	"net/http"
)

type ListConnectorTasksV1Request struct {
	// The name of the connector.
	Connector shared.Connector `pathParam:"style=simple,explode=false,name=connector"`
	// The connector ID.
	ConnectorID string `pathParam:"style=simple,explode=false,name=connectorId"`
	// Parameter used in pagination requests. Maximum page size is set to 15.
	// Set to the value of next for the next page of results.
	// Set to the value of previous for the previous page of results.
	// No other parameters can be set when this parameter is set.
	//
	Cursor *string `queryParam:"style=form,explode=true,name=cursor"`
	// The maximum number of results to return per page.
	//
	PageSize *int64 `default:"15" queryParam:"style=form,explode=true,name=pageSize"`
}

func (l ListConnectorTasksV1Request) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(l, "", false)
}

func (l *ListConnectorTasksV1Request) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &l, "", false, []string{"connector", "connectorId"}); err != nil {
		return err
	}
	return nil
}

func (l *ListConnectorTasksV1Request) GetConnector() shared.Connector {
	if l == nil {
		return shared.Connector("")
	}
	return l.Connector
}

func (l *ListConnectorTasksV1Request) GetConnectorID() string {
	if l == nil {
		return ""
	}
	return l.ConnectorID
}

func (l *ListConnectorTasksV1Request) GetCursor() *string {
	if l == nil {
		return nil
	}
	return l.Cursor
}

func (l *ListConnectorTasksV1Request) GetPageSize() *int64 {
	if l == nil {
		return nil
	}
	return l.PageSize
}

type ListConnectorTasksV1Response struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// OK
	TasksCursor *shared.TasksCursor
}

func (l *ListConnectorTasksV1Response) GetContentType() string {
	if l == nil {
		return ""
	}
	return l.ContentType
}

func (l *ListConnectorTasksV1Response) GetStatusCode() int {
	if l == nil {
		return 0
	}
	return l.StatusCode
}

func (l *ListConnectorTasksV1Response) GetRawResponse() *http.Response {
	if l == nil {
		return nil
	}
	return l.RawResponse
}

func (l *ListConnectorTasksV1Response) GetTasksCursor() *shared.TasksCursor {
	if l == nil {
		return nil
	}
	return l.TasksCursor
}
