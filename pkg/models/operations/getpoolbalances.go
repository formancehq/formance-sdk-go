// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/formancehq/formance-sdk-go/v3/pkg/models/shared"
	"github.com/formancehq/formance-sdk-go/v3/pkg/utils"
	"net/http"
	"time"
)

type GetPoolBalancesRequest struct {
	// Filter balances by date.
	//
	At time.Time `queryParam:"style=form,explode=true,name=at"`
	// The pool ID.
	PoolID string `pathParam:"style=simple,explode=false,name=poolId"`
}

func (g GetPoolBalancesRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetPoolBalancesRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"at", "poolId"}); err != nil {
		return err
	}
	return nil
}

func (g *GetPoolBalancesRequest) GetAt() time.Time {
	if g == nil {
		return time.Time{}
	}
	return g.At
}

func (g *GetPoolBalancesRequest) GetPoolID() string {
	if g == nil {
		return ""
	}
	return g.PoolID
}

type GetPoolBalancesResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// OK
	PoolBalancesResponse *shared.PoolBalancesResponse
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (g *GetPoolBalancesResponse) GetContentType() string {
	if g == nil {
		return ""
	}
	return g.ContentType
}

func (g *GetPoolBalancesResponse) GetPoolBalancesResponse() *shared.PoolBalancesResponse {
	if g == nil {
		return nil
	}
	return g.PoolBalancesResponse
}

func (g *GetPoolBalancesResponse) GetStatusCode() int {
	if g == nil {
		return 0
	}
	return g.StatusCode
}

func (g *GetPoolBalancesResponse) GetRawResponse() *http.Response {
	if g == nil {
		return nil
	}
	return g.RawResponse
}
