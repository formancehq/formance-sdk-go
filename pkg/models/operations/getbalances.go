// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/formancehq/formance-sdk-go/v3/pkg/models/shared"
	"net/http"
)

type GetBalancesRequest struct {
	// Filter balances involving given account, either as source or destination.
	Address *string `queryParam:"style=form,explode=true,name=address"`
	// Pagination cursor, will return accounts after given address, in descending order.
	After *string `queryParam:"style=form,explode=true,name=after"`
	// Parameter used in pagination requests. Maximum page size is set to 1000.
	// Set to the value of next for the next page of results.
	// Set to the value of previous for the previous page of results.
	// No other parameters can be set when this parameter is set.
	//
	Cursor *string `queryParam:"style=form,explode=true,name=cursor"`
	// Name of the ledger.
	Ledger string `pathParam:"style=simple,explode=false,name=ledger"`
	// The maximum number of results to return per page.
	//
	PageSize *int64 `queryParam:"style=form,explode=true,name=pageSize"`
}

func (g *GetBalancesRequest) GetAddress() *string {
	if g == nil {
		return nil
	}
	return g.Address
}

func (g *GetBalancesRequest) GetAfter() *string {
	if g == nil {
		return nil
	}
	return g.After
}

func (g *GetBalancesRequest) GetCursor() *string {
	if g == nil {
		return nil
	}
	return g.Cursor
}

func (g *GetBalancesRequest) GetLedger() string {
	if g == nil {
		return ""
	}
	return g.Ledger
}

func (g *GetBalancesRequest) GetPageSize() *int64 {
	if g == nil {
		return nil
	}
	return g.PageSize
}

type GetBalancesResponse struct {
	// OK
	BalancesCursorResponse *shared.BalancesCursorResponse
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (g *GetBalancesResponse) GetBalancesCursorResponse() *shared.BalancesCursorResponse {
	if g == nil {
		return nil
	}
	return g.BalancesCursorResponse
}

func (g *GetBalancesResponse) GetContentType() string {
	if g == nil {
		return ""
	}
	return g.ContentType
}

func (g *GetBalancesResponse) GetStatusCode() int {
	if g == nil {
		return 0
	}
	return g.StatusCode
}

func (g *GetBalancesResponse) GetRawResponse() *http.Response {
	if g == nil {
		return nil
	}
	return g.RawResponse
}
