// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/formancehq/formance-sdk-go/v3/pkg/models/shared"
	"net/http"
)

type V2ListPipelinesRequest struct {
	// Name of the ledger.
	Ledger string `pathParam:"style=simple,explode=false,name=ledger"`
}

func (v *V2ListPipelinesRequest) GetLedger() string {
	if v == nil {
		return ""
	}
	return v.Ledger
}

type V2ListPipelinesLedgerV2Cursor struct {
	Data     []shared.V2Pipeline `json:"data"`
	HasMore  bool                `json:"hasMore"`
	Next     *string             `json:"next,omitempty"`
	PageSize int64               `json:"pageSize"`
	Previous *string             `json:"previous,omitempty"`
}

func (v *V2ListPipelinesLedgerV2Cursor) GetData() []shared.V2Pipeline {
	if v == nil {
		return []shared.V2Pipeline{}
	}
	return v.Data
}

func (v *V2ListPipelinesLedgerV2Cursor) GetHasMore() bool {
	if v == nil {
		return false
	}
	return v.HasMore
}

func (v *V2ListPipelinesLedgerV2Cursor) GetNext() *string {
	if v == nil {
		return nil
	}
	return v.Next
}

func (v *V2ListPipelinesLedgerV2Cursor) GetPageSize() int64 {
	if v == nil {
		return 0
	}
	return v.PageSize
}

func (v *V2ListPipelinesLedgerV2Cursor) GetPrevious() *string {
	if v == nil {
		return nil
	}
	return v.Previous
}

type V2ListPipelinesCursor struct {
	Cursor V2ListPipelinesLedgerV2Cursor `json:"cursor"`
	Data   []shared.V2Pipeline           `json:"data,omitempty"`
}

func (v *V2ListPipelinesCursor) GetCursor() V2ListPipelinesLedgerV2Cursor {
	if v == nil {
		return V2ListPipelinesLedgerV2Cursor{}
	}
	return v.Cursor
}

func (v *V2ListPipelinesCursor) GetData() []shared.V2Pipeline {
	if v == nil {
		return nil
	}
	return v.Data
}

// V2ListPipelinesResponseBody - Pipelines list
type V2ListPipelinesResponseBody struct {
	Cursor *V2ListPipelinesCursor `json:"cursor,omitempty"`
}

func (v *V2ListPipelinesResponseBody) GetCursor() *V2ListPipelinesCursor {
	if v == nil {
		return nil
	}
	return v.Cursor
}

type V2ListPipelinesResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Pipelines list
	Object *V2ListPipelinesResponseBody
}

func (v *V2ListPipelinesResponse) GetContentType() string {
	if v == nil {
		return ""
	}
	return v.ContentType
}

func (v *V2ListPipelinesResponse) GetStatusCode() int {
	if v == nil {
		return 0
	}
	return v.StatusCode
}

func (v *V2ListPipelinesResponse) GetRawResponse() *http.Response {
	if v == nil {
		return nil
	}
	return v.RawResponse
}

func (v *V2ListPipelinesResponse) GetObject() *V2ListPipelinesResponseBody {
	if v == nil {
		return nil
	}
	return v.Object
}
