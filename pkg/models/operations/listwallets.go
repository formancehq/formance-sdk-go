// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/formancehq/formance-sdk-go/v3/pkg/models/shared"
	"github.com/formancehq/formance-sdk-go/v3/pkg/utils"
	"net/http"
)

type ListWalletsRequest struct {
	// Parameter used in pagination requests.
	// Set to the value of next for the next page of results.
	// Set to the value of previous for the previous page of results.
	// No other parameters can be set when the pagination token is set.
	//
	Cursor *string `queryParam:"style=form,explode=true,name=cursor"`
	Expand *string `queryParam:"style=form,explode=true,name=expand"`
	// Filter wallets by metadata key value pairs. Nested objects can be used as seen in the example below.
	Metadata map[string]string `queryParam:"style=deepObject,explode=true,name=metadata"`
	// Filter on wallet name
	Name *string `queryParam:"style=form,explode=true,name=name"`
	// The maximum number of results to return per page
	PageSize *int64 `default:"15" queryParam:"style=form,explode=true,name=pageSize"`
}

func (l ListWalletsRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(l, "", false)
}

func (l *ListWalletsRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &l, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (l *ListWalletsRequest) GetCursor() *string {
	if l == nil {
		return nil
	}
	return l.Cursor
}

func (l *ListWalletsRequest) GetExpand() *string {
	if l == nil {
		return nil
	}
	return l.Expand
}

func (l *ListWalletsRequest) GetMetadata() map[string]string {
	if l == nil {
		return nil
	}
	return l.Metadata
}

func (l *ListWalletsRequest) GetName() *string {
	if l == nil {
		return nil
	}
	return l.Name
}

func (l *ListWalletsRequest) GetPageSize() *int64 {
	if l == nil {
		return nil
	}
	return l.PageSize
}

type ListWalletsResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// OK
	ListWalletsResponse *shared.ListWalletsResponse
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (l *ListWalletsResponse) GetContentType() string {
	if l == nil {
		return ""
	}
	return l.ContentType
}

func (l *ListWalletsResponse) GetListWalletsResponse() *shared.ListWalletsResponse {
	if l == nil {
		return nil
	}
	return l.ListWalletsResponse
}

func (l *ListWalletsResponse) GetStatusCode() int {
	if l == nil {
		return 0
	}
	return l.StatusCode
}

func (l *ListWalletsResponse) GetRawResponse() *http.Response {
	if l == nil {
		return nil
	}
	return l.RawResponse
}
