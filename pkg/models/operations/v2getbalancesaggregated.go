// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/formancehq/formance-sdk-go/v3/pkg/models/shared"
	"github.com/formancehq/formance-sdk-go/v3/pkg/utils"
	"net/http"
	"time"
)

type V2GetBalancesAggregatedRequest struct {
	RequestBody map[string]any `request:"mediaType=application/json"`
	// Name of the ledger.
	Ledger string     `pathParam:"style=simple,explode=false,name=ledger"`
	Pit    *time.Time `queryParam:"style=form,explode=true,name=pit"`
	// Use insertion date instead of effective date
	UseInsertionDate *bool `queryParam:"style=form,explode=true,name=useInsertionDate"`
}

func (v V2GetBalancesAggregatedRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(v, "", false)
}

func (v *V2GetBalancesAggregatedRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &v, "", false, []string{"RequestBody", "ledger"}); err != nil {
		return err
	}
	return nil
}

func (v *V2GetBalancesAggregatedRequest) GetRequestBody() map[string]any {
	if v == nil {
		return map[string]any{}
	}
	return v.RequestBody
}

func (v *V2GetBalancesAggregatedRequest) GetLedger() string {
	if v == nil {
		return ""
	}
	return v.Ledger
}

func (v *V2GetBalancesAggregatedRequest) GetPit() *time.Time {
	if v == nil {
		return nil
	}
	return v.Pit
}

func (v *V2GetBalancesAggregatedRequest) GetUseInsertionDate() *bool {
	if v == nil {
		return nil
	}
	return v.UseInsertionDate
}

type V2GetBalancesAggregatedResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// OK
	V2AggregateBalancesResponse *shared.V2AggregateBalancesResponse
}

func (v *V2GetBalancesAggregatedResponse) GetContentType() string {
	if v == nil {
		return ""
	}
	return v.ContentType
}

func (v *V2GetBalancesAggregatedResponse) GetStatusCode() int {
	if v == nil {
		return 0
	}
	return v.StatusCode
}

func (v *V2GetBalancesAggregatedResponse) GetRawResponse() *http.Response {
	if v == nil {
		return nil
	}
	return v.RawResponse
}

func (v *V2GetBalancesAggregatedResponse) GetV2AggregateBalancesResponse() *shared.V2AggregateBalancesResponse {
	if v == nil {
		return nil
	}
	return v.V2AggregateBalancesResponse
}
