// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/formancehq/formance-sdk-go/v3/pkg/models/shared"
	"net/http"
)

type V3InstallConnectorRequest struct {
	V3InstallConnectorRequest *shared.V3InstallConnectorRequest `request:"mediaType=application/json"`
	// The connector to filter by
	Connector string `pathParam:"style=simple,explode=false,name=connector"`
}

func (o *V3InstallConnectorRequest) GetV3InstallConnectorRequest() *shared.V3InstallConnectorRequest {
	if o == nil {
		return nil
	}
	return o.V3InstallConnectorRequest
}

func (o *V3InstallConnectorRequest) GetConnector() string {
	if o == nil {
		return ""
	}
	return o.Connector
}

type V3InstallConnectorResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Accepted
	V3InstallConnectorResponse *shared.V3InstallConnectorResponse
}

func (o *V3InstallConnectorResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *V3InstallConnectorResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *V3InstallConnectorResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *V3InstallConnectorResponse) GetV3InstallConnectorResponse() *shared.V3InstallConnectorResponse {
	if o == nil {
		return nil
	}
	return o.V3InstallConnectorResponse
}
