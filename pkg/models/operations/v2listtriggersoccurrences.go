// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/formancehq/formance-sdk-go/v3/pkg/models/shared"
	"net/http"
)

type V2ListTriggersOccurrencesRequest struct {
	// Parameter used in pagination requests.
	// Set to the value of next for the next page of results.
	// Set to the value of previous for the previous page of results.
	// No other parameters can be set when this parameter is set.
	//
	Cursor *string `queryParam:"style=form,explode=true,name=cursor"`
	// The maximum number of results to return per page.
	//
	PageSize *int64 `queryParam:"style=form,explode=true,name=pageSize"`
	// The trigger id
	TriggerID string `pathParam:"style=simple,explode=false,name=triggerID"`
}

func (v *V2ListTriggersOccurrencesRequest) GetCursor() *string {
	if v == nil {
		return nil
	}
	return v.Cursor
}

func (v *V2ListTriggersOccurrencesRequest) GetPageSize() *int64 {
	if v == nil {
		return nil
	}
	return v.PageSize
}

func (v *V2ListTriggersOccurrencesRequest) GetTriggerID() string {
	if v == nil {
		return ""
	}
	return v.TriggerID
}

type V2ListTriggersOccurrencesResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// List of triggers occurrences
	V2ListTriggersOccurrencesResponse *shared.V2ListTriggersOccurrencesResponse
}

func (v *V2ListTriggersOccurrencesResponse) GetContentType() string {
	if v == nil {
		return ""
	}
	return v.ContentType
}

func (v *V2ListTriggersOccurrencesResponse) GetStatusCode() int {
	if v == nil {
		return 0
	}
	return v.StatusCode
}

func (v *V2ListTriggersOccurrencesResponse) GetRawResponse() *http.Response {
	if v == nil {
		return nil
	}
	return v.RawResponse
}

func (v *V2ListTriggersOccurrencesResponse) GetV2ListTriggersOccurrencesResponse() *shared.V2ListTriggersOccurrencesResponse {
	if v == nil {
		return nil
	}
	return v.V2ListTriggersOccurrencesResponse
}
