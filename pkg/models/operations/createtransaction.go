// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/formancehq/formance-sdk-go/v3/pkg/models/shared"
	"net/http"
)

type CreateTransactionRequest struct {
	// The request body must contain at least one of the following objects:
	//   - `postings`: suitable for simple transactions
	//   - `script`: enabling more complex transactions with Numscript
	//
	PostTransaction shared.PostTransaction `request:"mediaType=application/json"`
	// Name of the ledger.
	Ledger string `pathParam:"style=simple,explode=false,name=ledger"`
	// Set the preview mode. Preview mode doesn't add the logs to the database or publish a message to the message broker.
	Preview *bool `queryParam:"style=form,explode=true,name=preview"`
}

func (c *CreateTransactionRequest) GetPostTransaction() shared.PostTransaction {
	if c == nil {
		return shared.PostTransaction{}
	}
	return c.PostTransaction
}

func (c *CreateTransactionRequest) GetLedger() string {
	if c == nil {
		return ""
	}
	return c.Ledger
}

func (c *CreateTransactionRequest) GetPreview() *bool {
	if c == nil {
		return nil
	}
	return c.Preview
}

type CreateTransactionResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// OK
	TransactionsResponse *shared.TransactionsResponse
}

func (c *CreateTransactionResponse) GetContentType() string {
	if c == nil {
		return ""
	}
	return c.ContentType
}

func (c *CreateTransactionResponse) GetStatusCode() int {
	if c == nil {
		return 0
	}
	return c.StatusCode
}

func (c *CreateTransactionResponse) GetRawResponse() *http.Response {
	if c == nil {
		return nil
	}
	return c.RawResponse
}

func (c *CreateTransactionResponse) GetTransactionsResponse() *shared.TransactionsResponse {
	if c == nil {
		return nil
	}
	return c.TransactionsResponse
}
