// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/formancehq/formance-sdk-go/v3/pkg/models/shared"
	"net/http"
)

type V2ListLedgersRequest struct {
	RequestBody map[string]any `request:"mediaType=application/json"`
	// Parameter used in pagination requests. Maximum page size is set to 15.
	// Set to the value of next for the next page of results.
	// Set to the value of previous for the previous page of results.
	// No other parameters can be set when this parameter is set.
	//
	Cursor *string `queryParam:"style=form,explode=true,name=cursor"`
	// The maximum number of results to return per page.
	//
	PageSize *int64 `queryParam:"style=form,explode=true,name=pageSize"`
	// Sort results using a field name and order (ascending or descending).
	// Format: `<field>:<order>`, where `<field>` is the field name and `<order>` is either `asc` or `desc`.
	//
	Sort *string `queryParam:"style=form,explode=true,name=sort"`
}

func (v *V2ListLedgersRequest) GetRequestBody() map[string]any {
	if v == nil {
		return map[string]any{}
	}
	return v.RequestBody
}

func (v *V2ListLedgersRequest) GetCursor() *string {
	if v == nil {
		return nil
	}
	return v.Cursor
}

func (v *V2ListLedgersRequest) GetPageSize() *int64 {
	if v == nil {
		return nil
	}
	return v.PageSize
}

func (v *V2ListLedgersRequest) GetSort() *string {
	if v == nil {
		return nil
	}
	return v.Sort
}

type V2ListLedgersResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// OK
	V2LedgerListResponse *shared.V2LedgerListResponse
}

func (v *V2ListLedgersResponse) GetContentType() string {
	if v == nil {
		return ""
	}
	return v.ContentType
}

func (v *V2ListLedgersResponse) GetStatusCode() int {
	if v == nil {
		return 0
	}
	return v.StatusCode
}

func (v *V2ListLedgersResponse) GetRawResponse() *http.Response {
	if v == nil {
		return nil
	}
	return v.RawResponse
}

func (v *V2ListLedgersResponse) GetV2LedgerListResponse() *shared.V2LedgerListResponse {
	if v == nil {
		return nil
	}
	return v.V2LedgerListResponse
}
