// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/formancehq/formance-sdk-go/v3/pkg/utils"
	"net/http"
	"time"
)

type V2CountTransactionsRequest struct {
	RequestBody map[string]any `request:"mediaType=application/json"`
	// Name of the ledger.
	Ledger string     `pathParam:"style=simple,explode=false,name=ledger"`
	Pit    *time.Time `queryParam:"style=form,explode=true,name=pit"`
}

func (v V2CountTransactionsRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(v, "", false)
}

func (v *V2CountTransactionsRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &v, "", false, []string{"RequestBody", "ledger"}); err != nil {
		return err
	}
	return nil
}

func (v *V2CountTransactionsRequest) GetRequestBody() map[string]any {
	if v == nil {
		return map[string]any{}
	}
	return v.RequestBody
}

func (v *V2CountTransactionsRequest) GetLedger() string {
	if v == nil {
		return ""
	}
	return v.Ledger
}

func (v *V2CountTransactionsRequest) GetPit() *time.Time {
	if v == nil {
		return nil
	}
	return v.Pit
}

type V2CountTransactionsResponse struct {
	// HTTP response content type for this operation
	ContentType string
	Headers     map[string][]string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (v *V2CountTransactionsResponse) GetContentType() string {
	if v == nil {
		return ""
	}
	return v.ContentType
}

func (v *V2CountTransactionsResponse) GetHeaders() map[string][]string {
	if v == nil {
		return map[string][]string{}
	}
	return v.Headers
}

func (v *V2CountTransactionsResponse) GetStatusCode() int {
	if v == nil {
		return 0
	}
	return v.StatusCode
}

func (v *V2CountTransactionsResponse) GetRawResponse() *http.Response {
	if v == nil {
		return nil
	}
	return v.RawResponse
}
