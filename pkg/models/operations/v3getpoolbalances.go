// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/formancehq/formance-sdk-go/v3/pkg/models/shared"
	"github.com/formancehq/formance-sdk-go/v3/pkg/utils"
	"net/http"
	"time"
)

type V3GetPoolBalancesRequest struct {
	// The time to filter by
	At *time.Time `queryParam:"style=form,explode=true,name=at"`
	// The pool ID
	PoolID string `pathParam:"style=simple,explode=false,name=poolID"`
}

func (v V3GetPoolBalancesRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(v, "", false)
}

func (v *V3GetPoolBalancesRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &v, "", false, []string{"poolID"}); err != nil {
		return err
	}
	return nil
}

func (v *V3GetPoolBalancesRequest) GetAt() *time.Time {
	if v == nil {
		return nil
	}
	return v.At
}

func (v *V3GetPoolBalancesRequest) GetPoolID() string {
	if v == nil {
		return ""
	}
	return v.PoolID
}

type V3GetPoolBalancesResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// OK
	V3PoolBalancesResponse *shared.V3PoolBalancesResponse
}

func (v *V3GetPoolBalancesResponse) GetContentType() string {
	if v == nil {
		return ""
	}
	return v.ContentType
}

func (v *V3GetPoolBalancesResponse) GetStatusCode() int {
	if v == nil {
		return 0
	}
	return v.StatusCode
}

func (v *V3GetPoolBalancesResponse) GetRawResponse() *http.Response {
	if v == nil {
		return nil
	}
	return v.RawResponse
}

func (v *V3GetPoolBalancesResponse) GetV3PoolBalancesResponse() *shared.V3PoolBalancesResponse {
	if v == nil {
		return nil
	}
	return v.V3PoolBalancesResponse
}
