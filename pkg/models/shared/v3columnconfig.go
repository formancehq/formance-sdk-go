// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/formancehq/formance-sdk-go/v3/pkg/utils"
)

type V3ColumnConfig struct {
	APIKey        string  `json:"apiKey"`
	Endpoint      string  `json:"endpoint"`
	Name          string  `json:"name"`
	PageSize      *int64  `default:"25" json:"pageSize"`
	PollingPeriod *string `default:"2m" json:"pollingPeriod"`
	Provider      *string `default:"Column" json:"provider"`
}

func (v V3ColumnConfig) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(v, "", false)
}

func (v *V3ColumnConfig) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &v, "", false, []string{"apiKey", "endpoint", "name"}); err != nil {
		return err
	}
	return nil
}

func (v *V3ColumnConfig) GetAPIKey() string {
	if v == nil {
		return ""
	}
	return v.APIKey
}

func (v *V3ColumnConfig) GetEndpoint() string {
	if v == nil {
		return ""
	}
	return v.Endpoint
}

func (v *V3ColumnConfig) GetName() string {
	if v == nil {
		return ""
	}
	return v.Name
}

func (v *V3ColumnConfig) GetPageSize() *int64 {
	if v == nil {
		return nil
	}
	return v.PageSize
}

func (v *V3ColumnConfig) GetPollingPeriod() *string {
	if v == nil {
		return nil
	}
	return v.PollingPeriod
}

func (v *V3ColumnConfig) GetProvider() *string {
	if v == nil {
		return nil
	}
	return v.Provider
}
