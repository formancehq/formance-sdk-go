// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

type V3ConnectorScheduleInstancesCursorResponseCursor struct {
	Data     []V3Instance `json:"data"`
	HasMore  bool         `json:"hasMore"`
	Next     *string      `json:"next,omitempty"`
	PageSize int64        `json:"pageSize"`
	Previous *string      `json:"previous,omitempty"`
}

func (v *V3ConnectorScheduleInstancesCursorResponseCursor) GetData() []V3Instance {
	if v == nil {
		return []V3Instance{}
	}
	return v.Data
}

func (v *V3ConnectorScheduleInstancesCursorResponseCursor) GetHasMore() bool {
	if v == nil {
		return false
	}
	return v.HasMore
}

func (v *V3ConnectorScheduleInstancesCursorResponseCursor) GetNext() *string {
	if v == nil {
		return nil
	}
	return v.Next
}

func (v *V3ConnectorScheduleInstancesCursorResponseCursor) GetPageSize() int64 {
	if v == nil {
		return 0
	}
	return v.PageSize
}

func (v *V3ConnectorScheduleInstancesCursorResponseCursor) GetPrevious() *string {
	if v == nil {
		return nil
	}
	return v.Previous
}

type V3ConnectorScheduleInstancesCursorResponse struct {
	Cursor V3ConnectorScheduleInstancesCursorResponseCursor `json:"cursor"`
}

func (v *V3ConnectorScheduleInstancesCursorResponse) GetCursor() V3ConnectorScheduleInstancesCursorResponseCursor {
	if v == nil {
		return V3ConnectorScheduleInstancesCursorResponseCursor{}
	}
	return v.Cursor
}
