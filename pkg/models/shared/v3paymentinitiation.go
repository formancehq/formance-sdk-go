// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/formancehq/formance-sdk-go/v3/pkg/utils"
	"math/big"
	"time"
)

type V3PaymentInitiation struct {
	Amount               *big.Int                      `json:"amount"`
	Asset                string                        `json:"asset"`
	ConnectorID          string                        `json:"connectorID"`
	CreatedAt            time.Time                     `json:"createdAt"`
	Description          string                        `json:"description"`
	DestinationAccountID *string                       `json:"destinationAccountID,omitempty"`
	Error                *string                       `json:"error,omitempty"`
	ID                   string                        `json:"id"`
	Metadata             map[string]string             `json:"metadata,omitempty"`
	Provider             string                        `json:"provider"`
	Reference            string                        `json:"reference"`
	ScheduledAt          time.Time                     `json:"scheduledAt"`
	SourceAccountID      *string                       `json:"sourceAccountID,omitempty"`
	Status               V3PaymentInitiationStatusEnum `json:"status"`
	Type                 V3PaymentInitiationTypeEnum   `json:"type"`
}

func (v V3PaymentInitiation) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(v, "", false)
}

func (v *V3PaymentInitiation) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &v, "", false, []string{"amount", "asset", "connectorID", "createdAt", "description", "id", "provider", "reference", "scheduledAt", "status", "type"}); err != nil {
		return err
	}
	return nil
}

func (v *V3PaymentInitiation) GetAmount() *big.Int {
	if v == nil {
		return big.NewInt(0)
	}
	return v.Amount
}

func (v *V3PaymentInitiation) GetAsset() string {
	if v == nil {
		return ""
	}
	return v.Asset
}

func (v *V3PaymentInitiation) GetConnectorID() string {
	if v == nil {
		return ""
	}
	return v.ConnectorID
}

func (v *V3PaymentInitiation) GetCreatedAt() time.Time {
	if v == nil {
		return time.Time{}
	}
	return v.CreatedAt
}

func (v *V3PaymentInitiation) GetDescription() string {
	if v == nil {
		return ""
	}
	return v.Description
}

func (v *V3PaymentInitiation) GetDestinationAccountID() *string {
	if v == nil {
		return nil
	}
	return v.DestinationAccountID
}

func (v *V3PaymentInitiation) GetError() *string {
	if v == nil {
		return nil
	}
	return v.Error
}

func (v *V3PaymentInitiation) GetID() string {
	if v == nil {
		return ""
	}
	return v.ID
}

func (v *V3PaymentInitiation) GetMetadata() map[string]string {
	if v == nil {
		return nil
	}
	return v.Metadata
}

func (v *V3PaymentInitiation) GetProvider() string {
	if v == nil {
		return ""
	}
	return v.Provider
}

func (v *V3PaymentInitiation) GetReference() string {
	if v == nil {
		return ""
	}
	return v.Reference
}

func (v *V3PaymentInitiation) GetScheduledAt() time.Time {
	if v == nil {
		return time.Time{}
	}
	return v.ScheduledAt
}

func (v *V3PaymentInitiation) GetSourceAccountID() *string {
	if v == nil {
		return nil
	}
	return v.SourceAccountID
}

func (v *V3PaymentInitiation) GetStatus() V3PaymentInitiationStatusEnum {
	if v == nil {
		return V3PaymentInitiationStatusEnum("")
	}
	return v.Status
}

func (v *V3PaymentInitiation) GetType() V3PaymentInitiationTypeEnum {
	if v == nil {
		return V3PaymentInitiationTypeEnum("")
	}
	return v.Type
}
