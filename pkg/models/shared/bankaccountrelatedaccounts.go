// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/formancehq/formance-sdk-go/v3/pkg/utils"
	"time"
)

type BankAccountRelatedAccounts struct {
	AccountID   string    `json:"accountID"`
	ConnectorID string    `json:"connectorID"`
	CreatedAt   time.Time `json:"createdAt"`
	ID          string    `json:"id"`
	Provider    string    `json:"provider"`
}

func (b BankAccountRelatedAccounts) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(b, "", false)
}

func (b *BankAccountRelatedAccounts) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &b, "", false, []string{"accountID", "connectorID", "createdAt", "id", "provider"}); err != nil {
		return err
	}
	return nil
}

func (b *BankAccountRelatedAccounts) GetAccountID() string {
	if b == nil {
		return ""
	}
	return b.AccountID
}

func (b *BankAccountRelatedAccounts) GetConnectorID() string {
	if b == nil {
		return ""
	}
	return b.ConnectorID
}

func (b *BankAccountRelatedAccounts) GetCreatedAt() time.Time {
	if b == nil {
		return time.Time{}
	}
	return b.CreatedAt
}

func (b *BankAccountRelatedAccounts) GetID() string {
	if b == nil {
		return ""
	}
	return b.ID
}

func (b *BankAccountRelatedAccounts) GetProvider() string {
	if b == nil {
		return ""
	}
	return b.Provider
}
