// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/formancehq/formance-sdk-go/v3/pkg/utils"
	"time"
)

type TransferInitiationAdjusments struct {
	AdjustmentID string                   `json:"adjustmentID"`
	CreatedAt    time.Time                `json:"createdAt"`
	Error        *string                  `json:"error,omitempty"`
	Metadata     map[string]string        `json:"metadata,omitempty"`
	Status       TransferInitiationStatus `json:"status"`
}

func (t TransferInitiationAdjusments) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TransferInitiationAdjusments) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, []string{"adjustmentID", "createdAt", "status"}); err != nil {
		return err
	}
	return nil
}

func (t *TransferInitiationAdjusments) GetAdjustmentID() string {
	if t == nil {
		return ""
	}
	return t.AdjustmentID
}

func (t *TransferInitiationAdjusments) GetCreatedAt() time.Time {
	if t == nil {
		return time.Time{}
	}
	return t.CreatedAt
}

func (t *TransferInitiationAdjusments) GetError() *string {
	if t == nil {
		return nil
	}
	return t.Error
}

func (t *TransferInitiationAdjusments) GetMetadata() map[string]string {
	if t == nil {
		return nil
	}
	return t.Metadata
}

func (t *TransferInitiationAdjusments) GetStatus() TransferInitiationStatus {
	if t == nil {
		return TransferInitiationStatus("")
	}
	return t.Status
}
