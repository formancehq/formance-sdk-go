// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/formancehq/formance-sdk-go/v3/pkg/utils"
	"time"
)

type V3ConnectorConfig struct {
}

type V3Connector struct {
	Config               V3ConnectorConfig `json:"config"`
	CreatedAt            time.Time         `json:"createdAt"`
	ID                   string            `json:"id"`
	Name                 string            `json:"name"`
	Provider             string            `json:"provider"`
	Reference            string            `json:"reference"`
	ScheduledForDeletion bool              `json:"scheduledForDeletion"`
}

func (v V3Connector) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(v, "", false)
}

func (v *V3Connector) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &v, "", false, []string{"config", "createdAt", "id", "name", "provider", "reference", "scheduledForDeletion"}); err != nil {
		return err
	}
	return nil
}

func (v *V3Connector) GetConfig() V3ConnectorConfig {
	if v == nil {
		return V3ConnectorConfig{}
	}
	return v.Config
}

func (v *V3Connector) GetCreatedAt() time.Time {
	if v == nil {
		return time.Time{}
	}
	return v.CreatedAt
}

func (v *V3Connector) GetID() string {
	if v == nil {
		return ""
	}
	return v.ID
}

func (v *V3Connector) GetName() string {
	if v == nil {
		return ""
	}
	return v.Name
}

func (v *V3Connector) GetProvider() string {
	if v == nil {
		return ""
	}
	return v.Provider
}

func (v *V3Connector) GetReference() string {
	if v == nil {
		return ""
	}
	return v.Reference
}

func (v *V3Connector) GetScheduledForDeletion() bool {
	if v == nil {
		return false
	}
	return v.ScheduledForDeletion
}
