// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/formancehq/formance-sdk-go/v3/pkg/utils"
	"time"
)

type V2PostTransactionScript struct {
	Plain string            `json:"plain"`
	Vars  map[string]string `json:"vars,omitempty"`
}

func (v V2PostTransactionScript) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(v, "", false)
}

func (v *V2PostTransactionScript) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &v, "", false, []string{"plain"}); err != nil {
		return err
	}
	return nil
}

func (v *V2PostTransactionScript) GetPlain() string {
	if v == nil {
		return ""
	}
	return v.Plain
}

func (v *V2PostTransactionScript) GetVars() map[string]string {
	if v == nil {
		return nil
	}
	return v.Vars
}

type V2PostTransaction struct {
	Metadata  map[string]string        `json:"metadata"`
	Postings  []V2Posting              `json:"postings,omitempty"`
	Reference *string                  `json:"reference,omitempty"`
	Script    *V2PostTransactionScript `json:"script,omitempty"`
	Timestamp *time.Time               `json:"timestamp,omitempty"`
}

func (v V2PostTransaction) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(v, "", false)
}

func (v *V2PostTransaction) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &v, "", false, []string{"metadata"}); err != nil {
		return err
	}
	return nil
}

func (v *V2PostTransaction) GetMetadata() map[string]string {
	if v == nil {
		return map[string]string{}
	}
	return v.Metadata
}

func (v *V2PostTransaction) GetPostings() []V2Posting {
	if v == nil {
		return nil
	}
	return v.Postings
}

func (v *V2PostTransaction) GetReference() *string {
	if v == nil {
		return nil
	}
	return v.Reference
}

func (v *V2PostTransaction) GetScript() *V2PostTransactionScript {
	if v == nil {
		return nil
	}
	return v.Script
}

func (v *V2PostTransaction) GetTimestamp() *time.Time {
	if v == nil {
		return nil
	}
	return v.Timestamp
}
