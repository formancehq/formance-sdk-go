// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/formancehq/formance-sdk-go/v3/pkg/utils"
	"time"
)

type AccountRequest struct {
	AccountName  *string           `json:"accountName,omitempty"`
	ConnectorID  string            `json:"connectorID"`
	CreatedAt    time.Time         `json:"createdAt"`
	DefaultAsset *string           `json:"defaultAsset,omitempty"`
	Metadata     map[string]string `json:"metadata,omitempty"`
	Reference    string            `json:"reference"`
	Type         AccountType       `json:"type"`
}

func (a AccountRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(a, "", false)
}

func (a *AccountRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &a, "", false, []string{"connectorID", "createdAt", "reference", "type"}); err != nil {
		return err
	}
	return nil
}

func (a *AccountRequest) GetAccountName() *string {
	if a == nil {
		return nil
	}
	return a.AccountName
}

func (a *AccountRequest) GetConnectorID() string {
	if a == nil {
		return ""
	}
	return a.ConnectorID
}

func (a *AccountRequest) GetCreatedAt() time.Time {
	if a == nil {
		return time.Time{}
	}
	return a.CreatedAt
}

func (a *AccountRequest) GetDefaultAsset() *string {
	if a == nil {
		return nil
	}
	return a.DefaultAsset
}

func (a *AccountRequest) GetMetadata() map[string]string {
	if a == nil {
		return nil
	}
	return a.Metadata
}

func (a *AccountRequest) GetReference() string {
	if a == nil {
		return ""
	}
	return a.Reference
}

func (a *AccountRequest) GetType() AccountType {
	if a == nil {
		return AccountType("")
	}
	return a.Type
}
