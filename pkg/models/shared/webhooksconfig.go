// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/formancehq/formance-sdk-go/v3/pkg/utils"
	"time"
)

type WebhooksConfig struct {
	Active     bool      `json:"active"`
	CreatedAt  time.Time `json:"createdAt"`
	Endpoint   string    `json:"endpoint"`
	EventTypes []string  `json:"eventTypes"`
	ID         string    `json:"id"`
	Secret     string    `json:"secret"`
	UpdatedAt  time.Time `json:"updatedAt"`
}

func (w WebhooksConfig) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(w, "", false)
}

func (w *WebhooksConfig) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &w, "", false, []string{"active", "createdAt", "endpoint", "eventTypes", "id", "secret", "updatedAt"}); err != nil {
		return err
	}
	return nil
}

func (w *WebhooksConfig) GetActive() bool {
	if w == nil {
		return false
	}
	return w.Active
}

func (w *WebhooksConfig) GetCreatedAt() time.Time {
	if w == nil {
		return time.Time{}
	}
	return w.CreatedAt
}

func (w *WebhooksConfig) GetEndpoint() string {
	if w == nil {
		return ""
	}
	return w.Endpoint
}

func (w *WebhooksConfig) GetEventTypes() []string {
	if w == nil {
		return []string{}
	}
	return w.EventTypes
}

func (w *WebhooksConfig) GetID() string {
	if w == nil {
		return ""
	}
	return w.ID
}

func (w *WebhooksConfig) GetSecret() string {
	if w == nil {
		return ""
	}
	return w.Secret
}

func (w *WebhooksConfig) GetUpdatedAt() time.Time {
	if w == nil {
		return time.Time{}
	}
	return w.UpdatedAt
}
