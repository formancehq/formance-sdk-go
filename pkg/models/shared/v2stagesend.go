// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/formancehq/formance-sdk-go/v3/pkg/utils"
	"time"
)

type V2StageSend struct {
	Amount      *V2Monetary             `json:"amount,omitempty"`
	Destination *V2StageSendDestination `json:"destination,omitempty"`
	Metadata    map[string]string       `json:"metadata,omitempty"`
	Source      *V2StageSendSource      `json:"source,omitempty"`
	Timestamp   *time.Time              `json:"timestamp,omitempty"`
}

func (v V2StageSend) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(v, "", false)
}

func (v *V2StageSend) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &v, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (v *V2StageSend) GetAmount() *V2Monetary {
	if v == nil {
		return nil
	}
	return v.Amount
}

func (v *V2StageSend) GetDestination() *V2StageSendDestination {
	if v == nil {
		return nil
	}
	return v.Destination
}

func (v *V2StageSend) GetMetadata() map[string]string {
	if v == nil {
		return nil
	}
	return v.Metadata
}

func (v *V2StageSend) GetSource() *V2StageSendSource {
	if v == nil {
		return nil
	}
	return v.Source
}

func (v *V2StageSend) GetTimestamp() *time.Time {
	if v == nil {
		return nil
	}
	return v.Timestamp
}
