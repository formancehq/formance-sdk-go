// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/formancehq/formance-sdk-go/v3/pkg/utils"
	"time"
)

type V2TriggerOccurrence struct {
	Date               time.Time           `json:"date"`
	Error              *string             `json:"error,omitempty"`
	Event              map[string]any      `json:"event"`
	TriggerID          string              `json:"triggerID"`
	WorkflowInstance   *V2WorkflowInstance `json:"workflowInstance,omitempty"`
	WorkflowInstanceID *string             `json:"workflowInstanceID,omitempty"`
}

func (v V2TriggerOccurrence) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(v, "", false)
}

func (v *V2TriggerOccurrence) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &v, "", false, []string{"date", "event", "triggerID"}); err != nil {
		return err
	}
	return nil
}

func (v *V2TriggerOccurrence) GetDate() time.Time {
	if v == nil {
		return time.Time{}
	}
	return v.Date
}

func (v *V2TriggerOccurrence) GetError() *string {
	if v == nil {
		return nil
	}
	return v.Error
}

func (v *V2TriggerOccurrence) GetEvent() map[string]any {
	if v == nil {
		return map[string]any{}
	}
	return v.Event
}

func (v *V2TriggerOccurrence) GetTriggerID() string {
	if v == nil {
		return ""
	}
	return v.TriggerID
}

func (v *V2TriggerOccurrence) GetWorkflowInstance() *V2WorkflowInstance {
	if v == nil {
		return nil
	}
	return v.WorkflowInstance
}

func (v *V2TriggerOccurrence) GetWorkflowInstanceID() *string {
	if v == nil {
		return nil
	}
	return v.WorkflowInstanceID
}
