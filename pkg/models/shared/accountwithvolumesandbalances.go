// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/formancehq/formance-sdk-go/v3/pkg/utils"
	"math/big"
)

type AccountWithVolumesAndBalances struct {
	Address  string              `json:"address"`
	Balances map[string]*big.Int `json:"balances,omitempty"`
	Metadata map[string]any      `json:"metadata,omitempty"`
	Type     *string             `json:"type,omitempty"`
	Volumes  map[string]Volume   `json:"volumes,omitempty"`
}

func (a AccountWithVolumesAndBalances) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(a, "", false)
}

func (a *AccountWithVolumesAndBalances) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &a, "", false, []string{"address"}); err != nil {
		return err
	}
	return nil
}

func (a *AccountWithVolumesAndBalances) GetAddress() string {
	if a == nil {
		return ""
	}
	return a.Address
}

func (a *AccountWithVolumesAndBalances) GetBalances() map[string]*big.Int {
	if a == nil {
		return nil
	}
	return a.Balances
}

func (a *AccountWithVolumesAndBalances) GetMetadata() map[string]any {
	if a == nil {
		return nil
	}
	return a.Metadata
}

func (a *AccountWithVolumesAndBalances) GetType() *string {
	if a == nil {
		return nil
	}
	return a.Type
}

func (a *AccountWithVolumesAndBalances) GetVolumes() map[string]Volume {
	if a == nil {
		return nil
	}
	return a.Volumes
}
