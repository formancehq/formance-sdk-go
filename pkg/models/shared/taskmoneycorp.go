// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/formancehq/formance-sdk-go/v3/pkg/utils"
	"time"
)

type TaskMoneycorpDescriptor struct {
	AccountID *string `json:"accountID,omitempty"`
	Key       *string `json:"key,omitempty"`
	Name      *string `json:"name,omitempty"`
}

func (t TaskMoneycorpDescriptor) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TaskMoneycorpDescriptor) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (t *TaskMoneycorpDescriptor) GetAccountID() *string {
	if t == nil {
		return nil
	}
	return t.AccountID
}

func (t *TaskMoneycorpDescriptor) GetKey() *string {
	if t == nil {
		return nil
	}
	return t.Key
}

func (t *TaskMoneycorpDescriptor) GetName() *string {
	if t == nil {
		return nil
	}
	return t.Name
}

type TaskMoneycorpState struct {
}

func (t TaskMoneycorpState) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TaskMoneycorpState) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, nil); err != nil {
		return err
	}
	return nil
}

type TaskMoneycorp struct {
	ConnectorID string                  `json:"connectorID"`
	CreatedAt   time.Time               `json:"createdAt"`
	Descriptor  TaskMoneycorpDescriptor `json:"descriptor"`
	Error       *string                 `json:"error,omitempty"`
	ID          string                  `json:"id"`
	State       *TaskMoneycorpState     `json:"state,omitempty"`
	Status      TaskStatus              `json:"status"`
	UpdatedAt   time.Time               `json:"updatedAt"`
}

func (t TaskMoneycorp) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TaskMoneycorp) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, []string{"connectorID", "createdAt", "descriptor", "id", "status", "updatedAt"}); err != nil {
		return err
	}
	return nil
}

func (t *TaskMoneycorp) GetConnectorID() string {
	if t == nil {
		return ""
	}
	return t.ConnectorID
}

func (t *TaskMoneycorp) GetCreatedAt() time.Time {
	if t == nil {
		return time.Time{}
	}
	return t.CreatedAt
}

func (t *TaskMoneycorp) GetDescriptor() TaskMoneycorpDescriptor {
	if t == nil {
		return TaskMoneycorpDescriptor{}
	}
	return t.Descriptor
}

func (t *TaskMoneycorp) GetError() *string {
	if t == nil {
		return nil
	}
	return t.Error
}

func (t *TaskMoneycorp) GetID() string {
	if t == nil {
		return ""
	}
	return t.ID
}

func (t *TaskMoneycorp) GetState() *TaskMoneycorpState {
	if t == nil {
		return nil
	}
	return t.State
}

func (t *TaskMoneycorp) GetStatus() TaskStatus {
	if t == nil {
		return TaskStatus("")
	}
	return t.Status
}

func (t *TaskMoneycorp) GetUpdatedAt() time.Time {
	if t == nil {
		return time.Time{}
	}
	return t.UpdatedAt
}
