// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/formancehq/formance-sdk-go/v3/pkg/utils"
	"math/big"
	"time"
)

type AccountBalance struct {
	AccountID string    `json:"accountId"`
	Asset     string    `json:"asset"`
	Balance   *big.Int  `json:"balance"`
	CreatedAt time.Time `json:"createdAt"`
	// Deprecated: This will be removed in a future release, please migrate away from it as soon as possible.
	Currency      string    `json:"currency"`
	LastUpdatedAt time.Time `json:"lastUpdatedAt"`
}

func (a AccountBalance) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(a, "", false)
}

func (a *AccountBalance) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &a, "", false, []string{"accountId", "asset", "balance", "createdAt", "currency", "lastUpdatedAt"}); err != nil {
		return err
	}
	return nil
}

func (a *AccountBalance) GetAccountID() string {
	if a == nil {
		return ""
	}
	return a.AccountID
}

func (a *AccountBalance) GetAsset() string {
	if a == nil {
		return ""
	}
	return a.Asset
}

func (a *AccountBalance) GetBalance() *big.Int {
	if a == nil {
		return big.NewInt(0)
	}
	return a.Balance
}

func (a *AccountBalance) GetCreatedAt() time.Time {
	if a == nil {
		return time.Time{}
	}
	return a.CreatedAt
}

func (a *AccountBalance) GetCurrency() string {
	if a == nil {
		return ""
	}
	return a.Currency
}

func (a *AccountBalance) GetLastUpdatedAt() time.Time {
	if a == nil {
		return time.Time{}
	}
	return a.LastUpdatedAt
}
