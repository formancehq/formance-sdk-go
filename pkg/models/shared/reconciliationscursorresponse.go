// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

type ReconciliationsCursorResponseCursor struct {
	Data     []Reconciliation `json:"data"`
	HasMore  bool             `json:"hasMore"`
	Next     *string          `json:"next,omitempty"`
	PageSize int64            `json:"pageSize"`
	Previous *string          `json:"previous,omitempty"`
}

func (r *ReconciliationsCursorResponseCursor) GetData() []Reconciliation {
	if r == nil {
		return []Reconciliation{}
	}
	return r.Data
}

func (r *ReconciliationsCursorResponseCursor) GetHasMore() bool {
	if r == nil {
		return false
	}
	return r.HasMore
}

func (r *ReconciliationsCursorResponseCursor) GetNext() *string {
	if r == nil {
		return nil
	}
	return r.Next
}

func (r *ReconciliationsCursorResponseCursor) GetPageSize() int64 {
	if r == nil {
		return 0
	}
	return r.PageSize
}

func (r *ReconciliationsCursorResponseCursor) GetPrevious() *string {
	if r == nil {
		return nil
	}
	return r.Previous
}

// ReconciliationsCursorResponse - OK
type ReconciliationsCursorResponse struct {
	Cursor ReconciliationsCursorResponseCursor `json:"cursor"`
}

func (r *ReconciliationsCursorResponse) GetCursor() ReconciliationsCursorResponseCursor {
	if r == nil {
		return ReconciliationsCursorResponseCursor{}
	}
	return r.Cursor
}
