// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/formancehq/formance-sdk-go/v3/pkg/utils"
	"math/big"
)

type WalletsVolume struct {
	Balance *big.Int `json:"balance"`
	Input   *big.Int `json:"input"`
	Output  *big.Int `json:"output"`
}

func (w WalletsVolume) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(w, "", false)
}

func (w *WalletsVolume) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &w, "", false, []string{"balance", "input", "output"}); err != nil {
		return err
	}
	return nil
}

func (w *WalletsVolume) GetBalance() *big.Int {
	if w == nil {
		return big.NewInt(0)
	}
	return w.Balance
}

func (w *WalletsVolume) GetInput() *big.Int {
	if w == nil {
		return big.NewInt(0)
	}
	return w.Input
}

func (w *WalletsVolume) GetOutput() *big.Int {
	if w == nil {
		return big.NewInt(0)
	}
	return w.Output
}
