// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/formancehq/formance-sdk-go/v3/pkg/utils"
	"time"
)

type V2Pipeline struct {
	CreatedAt  time.Time `json:"createdAt"`
	Enabled    *bool     `json:"enabled,omitempty"`
	ExporterID string    `json:"exporterID"`
	ID         string    `json:"id"`
	LastLogID  *int64    `json:"lastLogID,omitempty"`
	Ledger     string    `json:"ledger"`
}

func (v V2Pipeline) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(v, "", false)
}

func (v *V2Pipeline) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &v, "", false, []string{"createdAt", "exporterID", "id", "ledger"}); err != nil {
		return err
	}
	return nil
}

func (v *V2Pipeline) GetCreatedAt() time.Time {
	if v == nil {
		return time.Time{}
	}
	return v.CreatedAt
}

func (v *V2Pipeline) GetEnabled() *bool {
	if v == nil {
		return nil
	}
	return v.Enabled
}

func (v *V2Pipeline) GetExporterID() string {
	if v == nil {
		return ""
	}
	return v.ExporterID
}

func (v *V2Pipeline) GetID() string {
	if v == nil {
		return ""
	}
	return v.ID
}

func (v *V2Pipeline) GetLastLogID() *int64 {
	if v == nil {
		return nil
	}
	return v.LastLogID
}

func (v *V2Pipeline) GetLedger() string {
	if v == nil {
		return ""
	}
	return v.Ledger
}
