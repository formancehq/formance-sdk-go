// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/formancehq/formance-sdk-go/v3/pkg/utils"
	"math/big"
)

type V2VolumesWithBalance struct {
	Account string   `json:"account"`
	Asset   string   `json:"asset"`
	Balance *big.Int `json:"balance"`
	Input   *big.Int `json:"input"`
	Output  *big.Int `json:"output"`
}

func (v V2VolumesWithBalance) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(v, "", false)
}

func (v *V2VolumesWithBalance) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &v, "", false, []string{"account", "asset", "balance", "input", "output"}); err != nil {
		return err
	}
	return nil
}

func (v *V2VolumesWithBalance) GetAccount() string {
	if v == nil {
		return ""
	}
	return v.Account
}

func (v *V2VolumesWithBalance) GetAsset() string {
	if v == nil {
		return ""
	}
	return v.Asset
}

func (v *V2VolumesWithBalance) GetBalance() *big.Int {
	if v == nil {
		return big.NewInt(0)
	}
	return v.Balance
}

func (v *V2VolumesWithBalance) GetInput() *big.Int {
	if v == nil {
		return big.NewInt(0)
	}
	return v.Input
}

func (v *V2VolumesWithBalance) GetOutput() *big.Int {
	if v == nil {
		return big.NewInt(0)
	}
	return v.Output
}
