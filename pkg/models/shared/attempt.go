// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/formancehq/formance-sdk-go/v3/pkg/utils"
	"time"
)

type Attempt struct {
	Config         WebhooksConfig `json:"config"`
	CreatedAt      time.Time      `json:"createdAt"`
	ID             string         `json:"id"`
	NextRetryAfter *time.Time     `json:"nextRetryAfter,omitempty"`
	Payload        string         `json:"payload"`
	RetryAttempt   int64          `json:"retryAttempt"`
	Status         string         `json:"status"`
	StatusCode     int64          `json:"statusCode"`
	UpdatedAt      time.Time      `json:"updatedAt"`
	WebhookID      string         `json:"webhookID"`
}

func (a Attempt) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(a, "", false)
}

func (a *Attempt) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &a, "", false, []string{"config", "createdAt", "id", "payload", "retryAttempt", "status", "statusCode", "updatedAt", "webhookID"}); err != nil {
		return err
	}
	return nil
}

func (a *Attempt) GetConfig() WebhooksConfig {
	if a == nil {
		return WebhooksConfig{}
	}
	return a.Config
}

func (a *Attempt) GetCreatedAt() time.Time {
	if a == nil {
		return time.Time{}
	}
	return a.CreatedAt
}

func (a *Attempt) GetID() string {
	if a == nil {
		return ""
	}
	return a.ID
}

func (a *Attempt) GetNextRetryAfter() *time.Time {
	if a == nil {
		return nil
	}
	return a.NextRetryAfter
}

func (a *Attempt) GetPayload() string {
	if a == nil {
		return ""
	}
	return a.Payload
}

func (a *Attempt) GetRetryAttempt() int64 {
	if a == nil {
		return 0
	}
	return a.RetryAttempt
}

func (a *Attempt) GetStatus() string {
	if a == nil {
		return ""
	}
	return a.Status
}

func (a *Attempt) GetStatusCode() int64 {
	if a == nil {
		return 0
	}
	return a.StatusCode
}

func (a *Attempt) GetUpdatedAt() time.Time {
	if a == nil {
		return time.Time{}
	}
	return a.UpdatedAt
}

func (a *Attempt) GetWebhookID() string {
	if a == nil {
		return ""
	}
	return a.WebhookID
}
