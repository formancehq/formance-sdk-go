// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/formancehq/formance-sdk-go/v3/pkg/utils"
	"time"
)

type V2Ledger struct {
	AddedAt  time.Time         `json:"addedAt"`
	Bucket   string            `json:"bucket"`
	Features map[string]string `json:"features,omitempty"`
	ID       *int64            `json:"id,omitempty"`
	Metadata map[string]string `json:"metadata,omitempty"`
	Name     string            `json:"name"`
}

func (v V2Ledger) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(v, "", false)
}

func (v *V2Ledger) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &v, "", false, []string{"addedAt", "bucket", "name"}); err != nil {
		return err
	}
	return nil
}

func (v *V2Ledger) GetAddedAt() time.Time {
	if v == nil {
		return time.Time{}
	}
	return v.AddedAt
}

func (v *V2Ledger) GetBucket() string {
	if v == nil {
		return ""
	}
	return v.Bucket
}

func (v *V2Ledger) GetFeatures() map[string]string {
	if v == nil {
		return nil
	}
	return v.Features
}

func (v *V2Ledger) GetID() *int64 {
	if v == nil {
		return nil
	}
	return v.ID
}

func (v *V2Ledger) GetMetadata() map[string]string {
	if v == nil {
		return nil
	}
	return v.Metadata
}

func (v *V2Ledger) GetName() string {
	if v == nil {
		return ""
	}
	return v.Name
}
