// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/formancehq/formance-sdk-go/v3/pkg/utils"
	"time"
)

type Policy struct {
	CreatedAt      time.Time      `json:"createdAt"`
	ID             string         `json:"id"`
	LedgerName     string         `json:"ledgerName"`
	LedgerQuery    map[string]any `json:"ledgerQuery"`
	Name           string         `json:"name"`
	PaymentsPoolID string         `json:"paymentsPoolID"`
}

func (p Policy) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(p, "", false)
}

func (p *Policy) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &p, "", false, []string{"createdAt", "id", "ledgerName", "ledgerQuery", "name", "paymentsPoolID"}); err != nil {
		return err
	}
	return nil
}

func (p *Policy) GetCreatedAt() time.Time {
	if p == nil {
		return time.Time{}
	}
	return p.CreatedAt
}

func (p *Policy) GetID() string {
	if p == nil {
		return ""
	}
	return p.ID
}

func (p *Policy) GetLedgerName() string {
	if p == nil {
		return ""
	}
	return p.LedgerName
}

func (p *Policy) GetLedgerQuery() map[string]any {
	if p == nil {
		return map[string]any{}
	}
	return p.LedgerQuery
}

func (p *Policy) GetName() string {
	if p == nil {
		return ""
	}
	return p.Name
}

func (p *Policy) GetPaymentsPoolID() string {
	if p == nil {
		return ""
	}
	return p.PaymentsPoolID
}
