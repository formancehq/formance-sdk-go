// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/formancehq/formance-sdk-go/v3/pkg/utils"
	"math/big"
	"time"
)

type V3CreatePaymentAdjustmentRequest struct {
	Amount    *big.Int            `json:"amount,omitempty"`
	Asset     *string             `json:"asset,omitempty"`
	CreatedAt time.Time           `json:"createdAt"`
	Metadata  map[string]string   `json:"metadata,omitempty"`
	Reference string              `json:"reference"`
	Status    V3PaymentStatusEnum `json:"status"`
}

func (v V3CreatePaymentAdjustmentRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(v, "", false)
}

func (v *V3CreatePaymentAdjustmentRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &v, "", false, []string{"createdAt", "reference", "status"}); err != nil {
		return err
	}
	return nil
}

func (v *V3CreatePaymentAdjustmentRequest) GetAmount() *big.Int {
	if v == nil {
		return nil
	}
	return v.Amount
}

func (v *V3CreatePaymentAdjustmentRequest) GetAsset() *string {
	if v == nil {
		return nil
	}
	return v.Asset
}

func (v *V3CreatePaymentAdjustmentRequest) GetCreatedAt() time.Time {
	if v == nil {
		return time.Time{}
	}
	return v.CreatedAt
}

func (v *V3CreatePaymentAdjustmentRequest) GetMetadata() map[string]string {
	if v == nil {
		return nil
	}
	return v.Metadata
}

func (v *V3CreatePaymentAdjustmentRequest) GetReference() string {
	if v == nil {
		return ""
	}
	return v.Reference
}

func (v *V3CreatePaymentAdjustmentRequest) GetStatus() V3PaymentStatusEnum {
	if v == nil {
		return V3PaymentStatusEnum("")
	}
	return v.Status
}
