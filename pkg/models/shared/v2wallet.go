// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/formancehq/formance-sdk-go/v3/pkg/utils"
	"time"
)

type V2Wallet struct {
	CreatedAt time.Time `json:"createdAt"`
	// The unique ID of the wallet.
	ID     string `json:"id"`
	Ledger string `json:"ledger"`
	// Metadata associated with the wallet.
	Metadata map[string]string `json:"metadata"`
	Name     string            `json:"name"`
}

func (v V2Wallet) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(v, "", false)
}

func (v *V2Wallet) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &v, "", false, []string{"createdAt", "id", "ledger", "metadata", "name"}); err != nil {
		return err
	}
	return nil
}

func (v *V2Wallet) GetCreatedAt() time.Time {
	if v == nil {
		return time.Time{}
	}
	return v.CreatedAt
}

func (v *V2Wallet) GetID() string {
	if v == nil {
		return ""
	}
	return v.ID
}

func (v *V2Wallet) GetLedger() string {
	if v == nil {
		return ""
	}
	return v.Ledger
}

func (v *V2Wallet) GetMetadata() map[string]string {
	if v == nil {
		return map[string]string{}
	}
	return v.Metadata
}

func (v *V2Wallet) GetName() string {
	if v == nil {
		return ""
	}
	return v.Name
}
