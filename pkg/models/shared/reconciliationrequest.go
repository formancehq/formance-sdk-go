// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/formancehq/formance-sdk-go/v3/pkg/utils"
	"time"
)

type ReconciliationRequest struct {
	ReconciledAtLedger   time.Time `json:"reconciledAtLedger"`
	ReconciledAtPayments time.Time `json:"reconciledAtPayments"`
}

func (r ReconciliationRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(r, "", false)
}

func (r *ReconciliationRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &r, "", false, []string{"reconciledAtLedger", "reconciledAtPayments"}); err != nil {
		return err
	}
	return nil
}

func (r *ReconciliationRequest) GetReconciledAtLedger() time.Time {
	if r == nil {
		return time.Time{}
	}
	return r.ReconciledAtLedger
}

func (r *ReconciliationRequest) GetReconciledAtPayments() time.Time {
	if r == nil {
		return time.Time{}
	}
	return r.ReconciledAtPayments
}
