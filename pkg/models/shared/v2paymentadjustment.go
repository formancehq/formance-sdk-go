// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/formancehq/formance-sdk-go/v3/pkg/utils"
	"math/big"
	"time"
)

type V2PaymentAdjustmentRaw struct {
}

type V2PaymentAdjustment struct {
	Absolute bool                   `json:"absolute"`
	Amount   *big.Int               `json:"amount"`
	Date     time.Time              `json:"date"`
	Raw      V2PaymentAdjustmentRaw `json:"raw"`
	Status   V2PaymentStatus        `json:"status"`
}

func (v V2PaymentAdjustment) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(v, "", false)
}

func (v *V2PaymentAdjustment) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &v, "", false, []string{"absolute", "amount", "date", "raw", "status"}); err != nil {
		return err
	}
	return nil
}

func (v *V2PaymentAdjustment) GetAbsolute() bool {
	if v == nil {
		return false
	}
	return v.Absolute
}

func (v *V2PaymentAdjustment) GetAmount() *big.Int {
	if v == nil {
		return big.NewInt(0)
	}
	return v.Amount
}

func (v *V2PaymentAdjustment) GetDate() time.Time {
	if v == nil {
		return time.Time{}
	}
	return v.Date
}

func (v *V2PaymentAdjustment) GetRaw() V2PaymentAdjustmentRaw {
	if v == nil {
		return V2PaymentAdjustmentRaw{}
	}
	return v.Raw
}

func (v *V2PaymentAdjustment) GetStatus() V2PaymentStatus {
	if v == nil {
		return V2PaymentStatus("")
	}
	return v.Status
}
