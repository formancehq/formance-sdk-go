// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/formancehq/formance-sdk-go/v3/pkg/utils"
	"time"
)

type V2WorkflowInstanceHistory struct {
	Error        *string    `json:"error,omitempty"`
	Input        V2Stage    `json:"input"`
	Name         string     `json:"name"`
	StartedAt    time.Time  `json:"startedAt"`
	Terminated   bool       `json:"terminated"`
	TerminatedAt *time.Time `json:"terminatedAt,omitempty"`
}

func (v V2WorkflowInstanceHistory) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(v, "", false)
}

func (v *V2WorkflowInstanceHistory) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &v, "", false, []string{"input", "name", "startedAt", "terminated"}); err != nil {
		return err
	}
	return nil
}

func (v *V2WorkflowInstanceHistory) GetError() *string {
	if v == nil {
		return nil
	}
	return v.Error
}

func (v *V2WorkflowInstanceHistory) GetInput() V2Stage {
	if v == nil {
		return V2Stage{}
	}
	return v.Input
}

func (v *V2WorkflowInstanceHistory) GetName() string {
	if v == nil {
		return ""
	}
	return v.Name
}

func (v *V2WorkflowInstanceHistory) GetStartedAt() time.Time {
	if v == nil {
		return time.Time{}
	}
	return v.StartedAt
}

func (v *V2WorkflowInstanceHistory) GetTerminated() bool {
	if v == nil {
		return false
	}
	return v.Terminated
}

func (v *V2WorkflowInstanceHistory) GetTerminatedAt() *time.Time {
	if v == nil {
		return nil
	}
	return v.TerminatedAt
}
