// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/formancehq/formance-sdk-go/v3/pkg/utils"
	"time"
)

type TransferInitiationPayments struct {
	CreatedAt time.Time     `json:"createdAt"`
	Error     *string       `json:"error,omitempty"`
	PaymentID string        `json:"paymentID"`
	Status    PaymentStatus `json:"status"`
}

func (t TransferInitiationPayments) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TransferInitiationPayments) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, []string{"createdAt", "paymentID", "status"}); err != nil {
		return err
	}
	return nil
}

func (t *TransferInitiationPayments) GetCreatedAt() time.Time {
	if t == nil {
		return time.Time{}
	}
	return t.CreatedAt
}

func (t *TransferInitiationPayments) GetError() *string {
	if t == nil {
		return nil
	}
	return t.Error
}

func (t *TransferInitiationPayments) GetPaymentID() string {
	if t == nil {
		return ""
	}
	return t.PaymentID
}

func (t *TransferInitiationPayments) GetStatus() PaymentStatus {
	if t == nil {
		return PaymentStatus("")
	}
	return t.Status
}
