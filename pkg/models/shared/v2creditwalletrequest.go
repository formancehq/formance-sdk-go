// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/formancehq/formance-sdk-go/v3/pkg/utils"
	"time"
)

type V2CreditWalletRequest struct {
	Amount V2Monetary `json:"amount"`
	// The balance to credit
	Balance *string `json:"balance,omitempty"`
	// Metadata associated with the wallet.
	Metadata  map[string]string `json:"metadata"`
	Reference *string           `json:"reference,omitempty"`
	Sources   []V2Subject       `json:"sources"`
	Timestamp *time.Time        `json:"timestamp,omitempty"`
}

func (v V2CreditWalletRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(v, "", false)
}

func (v *V2CreditWalletRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &v, "", false, []string{"amount", "metadata", "sources"}); err != nil {
		return err
	}
	return nil
}

func (v *V2CreditWalletRequest) GetAmount() V2Monetary {
	if v == nil {
		return V2Monetary{}
	}
	return v.Amount
}

func (v *V2CreditWalletRequest) GetBalance() *string {
	if v == nil {
		return nil
	}
	return v.Balance
}

func (v *V2CreditWalletRequest) GetMetadata() map[string]string {
	if v == nil {
		return map[string]string{}
	}
	return v.Metadata
}

func (v *V2CreditWalletRequest) GetReference() *string {
	if v == nil {
		return nil
	}
	return v.Reference
}

func (v *V2CreditWalletRequest) GetSources() []V2Subject {
	if v == nil {
		return []V2Subject{}
	}
	return v.Sources
}

func (v *V2CreditWalletRequest) GetTimestamp() *time.Time {
	if v == nil {
		return nil
	}
	return v.Timestamp
}
