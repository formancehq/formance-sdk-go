// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

type V3AccountsCursorResponseCursor struct {
	Data     []V3Account `json:"data"`
	HasMore  bool        `json:"hasMore"`
	Next     *string     `json:"next,omitempty"`
	PageSize int64       `json:"pageSize"`
	Previous *string     `json:"previous,omitempty"`
}

func (v *V3AccountsCursorResponseCursor) GetData() []V3Account {
	if v == nil {
		return []V3Account{}
	}
	return v.Data
}

func (v *V3AccountsCursorResponseCursor) GetHasMore() bool {
	if v == nil {
		return false
	}
	return v.HasMore
}

func (v *V3AccountsCursorResponseCursor) GetNext() *string {
	if v == nil {
		return nil
	}
	return v.Next
}

func (v *V3AccountsCursorResponseCursor) GetPageSize() int64 {
	if v == nil {
		return 0
	}
	return v.PageSize
}

func (v *V3AccountsCursorResponseCursor) GetPrevious() *string {
	if v == nil {
		return nil
	}
	return v.Previous
}

type V3AccountsCursorResponse struct {
	Cursor V3AccountsCursorResponseCursor `json:"cursor"`
}

func (v *V3AccountsCursorResponse) GetCursor() V3AccountsCursorResponseCursor {
	if v == nil {
		return V3AccountsCursorResponseCursor{}
	}
	return v.Cursor
}
